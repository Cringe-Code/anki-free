name: Deploy Go Application

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Default

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Build the Docker image
        run: docker build -t myapp:latest .

      - name: Log in to Docker Hub
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin

      - name: Tag the Docker image
        run: docker tag myapp:latest cringecode/anki:latest

      - name: Push the Docker image
        run: docker push cringecode/anki:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: Default

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            sudo docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
            sudo docker pull mydockerhubuser/myapp:latest
            sudo docker stop myapp || true
            sudo docker rm myapp || true
            sudo docker run -d --name myapp -p 8080:8080 mydockerhubuser/myapp:latest
          EOF