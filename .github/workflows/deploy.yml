name: Deploy Go Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: Default

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22

      - name: Build the Docker image
        run: docker build -t anki:latest .

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login anki-free.cr.cloud.ru -u ${{ secrets.DOCKER_USER }} --password-stdin

      - name: Tag the Docker image
        run: docker tag anki:latest anki-free.cr.cloud.ru/anki:latest

      - name: Push the Docker image
        run: docker push anki-free.cr.cloud.ru/anki:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: Default

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login anki-free.cr.cloud.ru -u ${{ secrets.DOCKER_USER }} --password-stdin
            sudo docker pull anki-free.cr.cloud.ru/anki:latest
            sudo docker stop anki || true
            sudo docker rm anki || true
            sudo docker run -d --name anki -p 8080:8080 -e POSTGRES_CONN="${{ secrets.POSTGRES_CONN }}" -e SERVER_ADDRESS="${{ secrets.SERVER_ADDRESS }}" -e SIGNING_KEY="${{ secrets.SIGNING_KEY }}" cringecode/anki:latest
            echo "Waiting for container to start..."
            sleep 5
            CONTAINER_STATUS=$(sudo docker inspect -f '{{.State.Status}}' anki)
            if [ "$CONTAINER_STATUS" == "exited" ]; then
              echo "Container exited. Logs:"
              sudo docker logs anki
              exit 1
            else
              echo "Container is running successfully."
            fi
          EOF